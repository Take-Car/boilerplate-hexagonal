on:
  pull_request:
    paths:
      - apps/web
      - .github/workflows/frontend.yaml
    branches:
      - main
      - develop
  push:
    paths:
      - apps/web
      - .github/workflows/frontend.yaml
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  COMPOSE_FILE: docker-compose.test.yml

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  hadolint:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: apps/web/Dockerfile

  docker:
    runs-on: ubuntu-24.04

    needs: hadolint

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download default artifact
        uses: actions/download-artifact@v4
        with:
          name: web-latest.tar
          path: ${{ runner.temp }}
        continue-on-error: true

      - name: Load default image
        run: docker load --input ${{ runner.temp }}/web-latest.tar
        continue-on-error: true

      - name: Build and export web image
        uses: docker/build-push-action@v6
        with:
          context: apps/web
          tags: |
            web:${{ github.sha }}
            web:latest
          outputs: |
            type=docker,dest=${{ runner.temp }}/web-${{ github.sha }}.tar
            type=docker,dest=${{ runner.temp }}/web-latest.tar
          target: test
          cache-from: |
            type=gha
            web:latest
          cache-to: type=gha,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-${{ github.sha }}.tar
          path: ${{ runner.temp }}/web-${{ github.sha }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/develop'
        with:
          name: web-latest.tar
          path: ${{ runner.temp }}/web-latest.tar

  frontend:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        tool: [eslint]

    env:
      COMPOSE_FILE: docker-compose.test.yml

    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: web-${{ github.sha }}.tar
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/web-${{ github.sha }}.tar
          docker image ls -a

      - name: Run ${{ matrix.tool }}
        run: |
          docker image ls -a
          docker run web:${{ github.sha }} yarn ${{ matrix.tool }}
